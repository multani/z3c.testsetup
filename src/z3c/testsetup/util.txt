##############################################################################
#
# Copyright (c) 2008 Zope Corporation and Contributors.
# All Rights Reserved.
#
# This software is subject to the provisions of the Zope Public License,
# Version 2.1 (ZPL).  A copy of the ZPL should accompany this distribution.
# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY AND ALL EXPRESS OR IMPLIED
# WARRANTIES ARE DISCLAIMED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF TITLE, MERCHANTABILITY, AGAINST INFRINGEMENT, AND FITNESS
# FOR A PARTICULAR PURPOSE.
#
##############################################################################
"""
===========================
Utilities for z3c.testsetup
===========================

The `util` module defines some helper functions of general use.

get_package(pkg_or_dotted_name)
-------------------------------

For most classes in this package, that accept packages as arguments,
these packages can be delivered as real packages or as strings
containing dotted names. To get a package of something, that is either
a string with dotted names or a real package, the `get_package`
function is provided.

Such we can get a package from a dotted name string::

   >>> from z3c.testsetup.util import get_package
   >>> get_package('z3c.testsetup.tests.cave')
   <module 'z3c.testsetup.tests.cave' from '...'>

The dotted name string can be unicode::

   >>> get_package(u'z3c.testsetup.tests.cave')
   <module 'z3c.testsetup.tests.cave' from '...'>

We can indeed pass a package as argument::

   >>> from z3c.testsetup.tests import cave
   >>> get_package(cave)
   <module 'z3c.testsetup.tests.cave' from '...'>


get_keyword_params(class, method_name)
--------------------------------------

The ``get_keyword_params()`` function tries to extract all keyword
parameters of a given method of a class. If, for example, we want to
know, which keyword parameters are supported by the constructor of the
``DocTestSetup`` class, we can do this like so::

   >>> from z3c.testsetup.doctesting import DocTestSetup
   >>> from z3c.testsetup.util import get_keyword_params
   >>> kw_list = get_keyword_params(DocTestSetup, '__init__')
   >>> kw_list.sort()
   >>> kw_list
   ['encoding', 'extensions', 'filter_func', 'globs', 'optionflags',
   'regexp_list', 'setup', 'teardown']

The FunctionalDocTestSetup class supports some more keywords in its
constructor::

   >>> from z3c.testsetup.doctesting import FunctionalDocTestSetup
   >>> kw_list2 = get_keyword_params(FunctionalDocTestSetup, '__init__')
   >>> kw_list2.sort()
   >>> kw_list2
   ['checker', 'encoding', 'extensions', 'filter_func', 'globs',
    'layer', 'layer_name', 'optionflags', 'regexp_list', 'setup',
    'teardown', 'zcml_config']


"""
